// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  DELIVERED
  CANCELLED
}

model Order {
  id          String      @id @default(uuid())
  totalAmount Float       @map("total_amount")
  totalItems  Int         @map("total_items")
  status      OrderStatus @default(PENDING)
  paid        Boolean     @default(false)
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  OrderItem OrderItem[]
  PaidOrder PaidOrder?

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(uuid())
  productId Int     @map("product_id")
  quantity  Int
  price     Float
  orderId   String? @map("order_id")

  Order Order? @relation(fields: [orderId], references: [id])

  @@map("orders_has_items")
}

model PaidOrder {
  id        String   @id @default(uuid())
  orderId   String   @unique @map("order_id")
  paymentId String   @unique @map("payment_id")
  totalPaid Float    @map("total_paid")
  currency  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Order Order @relation(fields: [orderId], references: [id])

  @@map("paid_orders")
}
